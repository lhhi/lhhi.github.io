<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据结构</title>
    <link href="/2024/08/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2024/08/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1><h2 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;iostream&gt;</span><br><span class="hljs-comment">#include&lt;cstdio&gt;</span><br><span class="hljs-comment">#include&lt;cstdlib&gt;</span><br><span class="hljs-comment">#include&lt;ctime&gt;</span><br><span class="hljs-comment">#define red 0</span><br><span class="hljs-comment">#define black 1 </span><br><span class="hljs-comment">#define dblack 2</span><br>using namespace std;<br>// red 0, black 1<br>struct Node&#123;<br>int key,color;<br>struct Node *lchild,*rchild; <br>&#125;; <br><br>Node __Nil;<br><span class="hljs-comment">#define Nil (&amp;__Nil)</span><br><br>void <span class="hljs-function"><span class="hljs-title">init</span></span>()&#123;<br>Nil-&gt;key=-1;<br>Nil-&gt;color=black;<br>Nil-&gt;lchild=Nil-&gt;rchild=Nil;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>Node *getnewnode(int key)&#123;<br>Node *p=new Node;<br>p-&gt;key=key;<br>p-&gt;color=red;<br>p-&gt;lchild=p-&gt;rchild=Nil;<br><span class="hljs-built_in">return</span> p;<br>&#125;<br><br>bool has_red_node(Node *root)&#123;<br><span class="hljs-built_in">return</span> root-&gt;lchild-&gt;color==red||root-&gt;rchild-&gt;color==red;<br>&#125;<br><br>Node *left_rotate(Node *root)&#123;<br>Node *new_node=root-&gt;rchild;<br>root-&gt;rchild=new_node-&gt;lchild;<br>new_node-&gt;lchild=root;<br><span class="hljs-built_in">return</span> new_node;<br>&#125;<br><br>Node *right_rotate(Node *root)&#123;<br>Node *new_node=root-&gt;lchild;<br>root-&gt;lchild=new_node-&gt;rchild;<br>new_node-&gt;rchild=root;<br><span class="hljs-built_in">return</span> new_node;<br>&#125;<br><br>Node *insert_maintain(Node *root)&#123;<br>int flag=0;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;color==red&amp;&amp;has_red_node(root-&gt;lchild)) flag=1;<br><span class="hljs-keyword">if</span>(root-&gt;rchild-&gt;color==red&amp;&amp;has_red_node(root-&gt;rchild)) flag=2;<br><span class="hljs-keyword">if</span>(flag==0) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;color==red&amp;&amp;root-&gt;rchild-&gt;color==red) goto red_up_maintain;<br><span class="hljs-keyword">if</span>(flag==1)&#123;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;rchild-&gt;color==red)&#123;<br>root-&gt;lchild=left_rotate(root-&gt;lchild);<br>&#125;<br>root=right_rotate(root);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span>(root-&gt;rchild-&gt;lchild-&gt;color==red)&#123;<br>root-&gt;rchild=right_rotate(root-&gt;rchild);<br>&#125;<br>root=left_rotate(root);<br>&#125;<br>red_up_maintain:<br>root-&gt;color=red;<br>root-&gt;lchild-&gt;color=black;<br>root-&gt;rchild-&gt;color=black;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>Node *__insert(Node *root,int key)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> getnewnode(key);<br><span class="hljs-keyword">if</span>(root-&gt;key==key) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(key&lt;root-&gt;key) root-&gt;lchild=__insert(root-&gt;lchild,key);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(key&gt;root-&gt;key) root-&gt;rchild=__insert(root-&gt;rchild,key);<br><span class="hljs-built_in">return</span> insert_maintain(root);<br>&#125;<br><br>Node *insert(Node *root,int key)&#123;<br>root=__insert(root,key);<br>root-&gt;color=black;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>void clear(Node *root)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> ;<br>clear(root-&gt;lchild);<br>clear(root-&gt;rchild);<br>delete root;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void output(Node *root)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> ;<br>output(root-&gt;lchild);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d(%d)[%d][%d]\n&quot;</span>,root-&gt;key,root-&gt;color,root-&gt;lchild-&gt;key,root-&gt;rchild-&gt;key);<br>output(root-&gt;rchild);<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>Node *erase_maintain(Node *root)&#123;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;color!=dblack&amp;&amp;root-&gt;rchild-&gt;color!=dblack) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(has_red_node(root))&#123;<br>root-&gt;color=red;<br><span class="hljs-keyword">if</span>(root-&gt;rchild-&gt;color==red)&#123;<br>root=left_rotate(root);<br>root-&gt;lchild=erase_maintain(root-&gt;lchild);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>root=right_rotate(root);<br>root-&gt;rchild=erase_maintain(root-&gt;rchild);<br>&#125;<br>root-&gt;color=black;<br><span class="hljs-built_in">return</span> root;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">if</span>(root-&gt;rchild-&gt;color==dblack&amp;&amp;!has_red_node(root-&gt;lchild)||<br>root-&gt;lchild-&gt;color==dblack&amp;&amp;!has_red_node(root-&gt;rchild))&#123;<br>root-&gt;color+=1;<br>root-&gt;lchild-&gt;color-=1;<br>root-&gt;rchild-&gt;color-=1;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;color==dblack)&#123;<br>root-&gt;lchild-&gt;color=black;<br><span class="hljs-keyword">if</span>(root-&gt;rchild-&gt;rchild-&gt;color!=red)&#123;<br>root-&gt;rchild=right_rotate(root-&gt;rchild);<br>&#125;<br>root-&gt;rchild-&gt;color=root-&gt;color;<br>root=left_rotate(root); <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>root-&gt;rchild-&gt;color=black;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;lchild-&gt;color!=red)&#123;<br>root-&gt;lchild=left_rotate(root-&gt;lchild);<br>&#125;<br>root-&gt;lchild-&gt;color=root-&gt;color;<br>root=right_rotate(root);<br>&#125;<br>root-&gt;lchild-&gt;color=root-&gt;rchild-&gt;color=black; <br><span class="hljs-built_in">return</span> root;<br>&#125;<br>&#125;<br><br>Node *pre_search(Node *root)&#123;<br>Node *temp=root-&gt;lchild;<br><span class="hljs-keyword">while</span>(temp-&gt;rchild!=Nil) temp=temp-&gt;rchild; <br><span class="hljs-built_in">return</span> temp;<br>&#125;<br><br>Node *__erase(Node *root,int key)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(key&lt;root-&gt;key) root-&gt;lchild=__erase(root-&gt;lchild,key);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(key&gt;root-&gt;key) root-&gt;rchild=__erase(root-&gt;rchild,key);<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">if</span>(root-&gt;lchild==Nil||root-&gt;rchild==Nil)&#123;<br>Node *temp=root-&gt;lchild!=Nil?root-&gt;lchild:root-&gt;rchild;<br>temp-&gt;color+=root-&gt;color;<br>delete root;<br><span class="hljs-built_in">return</span> temp;<br>&#125;<br>Node *temp=pre_search(root);<br>root-&gt;key=temp-&gt;key;<br>root-&gt;lchild=__erase(root-&gt;lchild,temp-&gt;key);<br>&#125;<br><span class="hljs-built_in">return</span> erase_maintain(root);<br>&#125; <br><br>Node *erase(Node *root,int key)&#123;<br>root=__erase(root,key);<br>root-&gt;color=black;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()&#123;<br>init();<br>srand(time(0));<br>Node *root=Nil;<br><span class="hljs-comment">#define MAX_N 10</span><br><span class="hljs-keyword">for</span>(int i=0;i&lt;MAX_N;i++)&#123;<br>int x=rand()%100;<br>root=insert(root,x);<br>output(root);<br>cout&lt;&lt;<span class="hljs-string">endl;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">int y;</span><br><span class="hljs-string">while(cin&gt;&gt;y)&#123;</span><br><span class="hljs-string">if(y==-1) break;</span><br><span class="hljs-string">root=erase(root,y);</span><br><span class="hljs-string">output(root);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">return 0;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="AVL-树"><a href="#AVL-树" class="headerlink" title="AVL 树"></a>AVL 树</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;iostream&gt;</span><br><span class="hljs-comment">#include&lt;cstdlib&gt;</span><br><span class="hljs-comment">#include&lt;cstdio&gt;</span><br>using namespace std;<br>struct Node&#123;<br>int key,h;<br>struct Node *lchild,*rchild;<br>&#125;; <br><br>Node __Nil; <br><span class="hljs-comment">#define Nil (&amp;__Nil)</span><br>void <span class="hljs-function"><span class="hljs-title">init</span></span>()&#123;<br>Nil-&gt;h=0;<br>Nil-&gt;key=-1;<br>Nil-&gt;lchild=Nil-&gt;rchild=Nil;<br><span class="hljs-built_in">return</span> ; <br>&#125;<br><br>Node *getnewnode(int key)&#123;<br>Node *p=new Node;<br>p-&gt;key=key;<br>p-&gt;h=1;<br>p-&gt;lchild=p-&gt;rchild=Nil;<br><span class="hljs-built_in">return</span> p;<br>&#125;<br><br>void update_heigh(Node *root)&#123;<br>root-&gt;h=max(root-&gt;lchild-&gt;h,root-&gt;rchild-&gt;h)+1; <br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>Node *left_rotate(Node *root)&#123;<br>Node *temp=root-&gt;rchild;<br>root-&gt;rchild=temp-&gt;lchild;<br>temp-&gt;lchild=root;<br>update_heigh(root);<br>update_heigh(temp);<br><span class="hljs-built_in">return</span> temp;<br>&#125;<br><br>Node *right_rotate(Node *root)&#123;<br>Node *temp=root-&gt;lchild;<br>root-&gt;lchild=temp-&gt;rchild;<br>temp-&gt;rchild=root;<br>update_heigh(root);<br>update_heigh(temp);<br><span class="hljs-built_in">return</span> temp;<br>&#125;<br><br>Node *maintain(Node *root)&#123; <br><span class="hljs-keyword">if</span>(abs(root-&gt;lchild-&gt;h-root-&gt;rchild-&gt;h)&lt;=1) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;h&gt;root-&gt;rchild-&gt;h)&#123;<br><span class="hljs-keyword">if</span>(root-&gt;lchild-&gt;rchild-&gt;h&gt;root-&gt;lchild-&gt;lchild-&gt;h)&#123;<br>root-&gt;lchild=left_rotate(root-&gt;lchild);<br>&#125;<br>root=right_rotate(root);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">if</span>(root-&gt;rchild-&gt;lchild-&gt;h&gt;root-&gt;rchild-&gt;rchild-&gt;h)&#123;<br>root-&gt;rchild=right_rotate(root-&gt;rchild);<br>&#125;<br>root=left_rotate(root);<br>&#125; <br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>Node *insert(Node *root,int key)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> getnewnode(key);<br><span class="hljs-keyword">if</span>(root-&gt;key==key) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(root-&gt;key&gt;key) root-&gt;lchild=insert(root-&gt;lchild,key);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(root-&gt;key&lt;key) root-&gt;rchild=insert(root-&gt;rchild,key);<br>update_heigh(root);<br><span class="hljs-built_in">return</span> maintain(root);<br>&#125;<br><br>Node *pre_search(Node *root)&#123;<br>Node *temp=root-&gt;lchild;<br><span class="hljs-keyword">while</span>(temp-&gt;rchild!=Nil) temp=temp-&gt;rchild;<br><span class="hljs-built_in">return</span> temp;<br>&#125;<br><br>Node *erase(Node *root,int key)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(root-&gt;key&lt;key) root-&gt;rchild=erase(root-&gt;rchild,key);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(root-&gt;key&gt;key) root-&gt;lchild=erase(root-&gt;lchild,key); <br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span>(root-&gt;lchild==Nil||root-&gt;rchild==Nil)&#123;<br>Node *temp=root-&gt;lchild!=Nil?root-&gt;lchild:root-&gt;rchild;<br>delete root;<br><span class="hljs-built_in">return</span> temp;<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>Node *temp=pre_search(root);<br>root-&gt;key=temp-&gt;key; <br>root-&gt;lchild=erase(root-&gt;lchild,temp-&gt;key);<br>&#125;<br>&#125;<br>update_heigh(root);<br><span class="hljs-built_in">return</span> maintain(root);<br>&#125; <br><br>void clear(Node *root)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> ;<br>clear(root-&gt;lchild);<br>clear(root-&gt;rchild);<br>delete root;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void output(Node *root)&#123;<br><span class="hljs-keyword">if</span>(root==Nil) <span class="hljs-built_in">return</span> ;<br>output(root-&gt;lchild);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d[%d][%d]&quot;</span>,root-&gt;key,root-&gt;lchild-&gt;key,root-&gt;rchild-&gt;key);<br>output(root-&gt;rchild);<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()&#123;<br>init();<br>Node *root=Nil;<br>int x;<br><span class="hljs-keyword">while</span>(cin&gt;&gt;x)&#123;<br><span class="hljs-keyword">if</span>(x==-1) <span class="hljs-built_in">break</span>;<br>root=insert(root,x);<br>&#125;<br>output(root);<br>int y;<br><span class="hljs-keyword">while</span>(cin&gt;&gt;y)&#123;<br><span class="hljs-keyword">if</span>(y==-1) <span class="hljs-built_in">break</span>;<br>root=erase(root,y);<br>output(root);<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="B-树"><a href="#B-树" class="headerlink" title="B-树"></a>B-树</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;cstdlib&gt;</span><br><span class="hljs-comment">#include&lt;ctime&gt;</span><br><span class="hljs-comment">#include&lt;cstring&gt;</span><br>using namespace std;<br><span class="hljs-comment">#define MAX_M 3</span><br><span class="hljs-comment">#define Lchild(root,pos) (root-&gt;next[pos])</span><br><span class="hljs-comment">#define Rchild(root,pos) (root-&gt;next[pos+1])</span><br>struct Node&#123;<br>int n,key[MAX_M+1];<br>struct Node *next[MAX_M+1];<br>&#125;; <br><br>Node *<span class="hljs-function"><span class="hljs-title">getnewnode</span></span>()&#123;<br>Node *p=new Node;<br>p-&gt;n=0; <br>memset(p-&gt;next,0,sizeof(Node *)*(MAX_M+1));<br><span class="hljs-built_in">return</span> p;<br>&#125;<br><br>Node *insert_key(Node *root,int key)&#123;<br><span class="hljs-keyword">if</span>(root==NULL) &#123;<br>root=getnewnode();<br>root-&gt;key[(root-&gt;n)++]=key;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br>int pos=0;<br><span class="hljs-keyword">while</span>(pos&lt;root-&gt;n&amp;&amp;root-&gt;key[pos]&lt;key) pos+=1;<br><span class="hljs-keyword">if</span>(root-&gt;key[pos]==key) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">for</span>(int i=root-&gt;n-1;i&gt;=pos;i--) root-&gt;key[i+1]=root-&gt;key[i]; <br>root-&gt;key[pos]=key;<br>root-&gt;n+=1;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>Node *insert_maintain(Node *root,Node *child,int pos)&#123;<br><span class="hljs-keyword">if</span>(child-&gt;n&lt;MAX_M) <span class="hljs-built_in">return</span> root;<br>int spos=(child-&gt;n)/2;<br>Node *node1=getnewnode();<br>Node *node2=getnewnode();<br>node1-&gt;n=spos;<br>node2-&gt;n=child-&gt;n-1-spos;<br><span class="hljs-keyword">for</span>(int i=0;i&lt;spos;i++)&#123;<br>node1-&gt;key[i]=child-&gt;key[i];<br>node1-&gt;next[i]=child-&gt;next[i];<br>&#125;<br>node1-&gt;next[spos]=child-&gt;next[spos];<br><span class="hljs-keyword">for</span>(int i=0;i&lt;node2-&gt;n;i++)&#123;<br>node2-&gt;key[i]=child-&gt;key[i+spos+1];<br>node2-&gt;next[i]=child-&gt;next[i+spos+1];<br>&#125;<br>node2-&gt;next[node2-&gt;n]=child-&gt;next[child-&gt;n];<br><span class="hljs-keyword">for</span>(int i=root-&gt;n;i&gt;=pos;i--)&#123;<br>root-&gt;key[i+1]=root-&gt;key[i];<br>root-&gt;next[i+1]=root-&gt;next[i];<br>&#125;<br>root-&gt;key[pos]=child-&gt;key[spos];<br>root-&gt;next[pos]=node1;<br>root-&gt;next[pos+1]=node2;<br>root-&gt;n+=1;<br>delete child;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>Node *__insert(Node *root,int key)&#123;<br><span class="hljs-keyword">if</span>(root==NULL||root-&gt;next[0]==NULL) <span class="hljs-built_in">return</span> insert_key(root,key);<br>int pos=0;<br><span class="hljs-keyword">while</span>(pos&lt;root-&gt;n&amp;&amp;root-&gt;key[pos]&lt;key) pos+=1;<br><span class="hljs-keyword">if</span>(pos&lt;root-&gt;n&amp;&amp;root-&gt;key[pos]==key) <span class="hljs-built_in">return</span> root;<br>__insert(root-&gt;next[pos],key);<br><span class="hljs-built_in">return</span> insert_maintain(root,root-&gt;next[pos],pos);<br>&#125;<br><br>Node *insert(Node *root,int key)&#123;<br>root=__insert(root,key);<br><span class="hljs-keyword">if</span>(root-&gt;n==MAX_M)&#123;<br>Node *temp=getnewnode();<br>temp-&gt;next[0]=root;<br>root=insert_maintain(temp,root,0);<br>&#125;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>void clear(Node *root)&#123;<br><span class="hljs-keyword">if</span>(root==NULL) <span class="hljs-built_in">return</span> ;<br><span class="hljs-keyword">for</span>(int i=0;i&lt;=root-&gt;n;i++) clear(root-&gt;next[i]);<br>delete root;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void print_node(Node *root) &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d : &quot;</span>, root-&gt;n);<br>    <span class="hljs-keyword">for</span> (int i = 0; i &lt; root-&gt;n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%4d&quot;</span>, root-&gt;key[i]);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; | &quot;</span>);<br>    <span class="hljs-keyword">if</span> (root-&gt;next[0] == NULL) goto output_end;<br>    <span class="hljs-keyword">for</span> (int i = 0; i &lt;= root-&gt;n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%4d&quot;</span>, root-&gt;next[i]-&gt;key[0]);<br>    &#125;<br>output_end:<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    <span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void output(Node *root) &#123;<br>    <span class="hljs-keyword">if</span> (root == NULL) <span class="hljs-built_in">return</span> ;<br>    print_node(root);<br>    <span class="hljs-keyword">for</span> (int i = 0; i &lt;= root-&gt;n; i++) &#123;<br>        output(root-&gt;next[i]);<br>    &#125;<br>    <span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void erase_key(Node *root,int pos)&#123;<br><span class="hljs-keyword">for</span>(int i=pos+1;i&lt;root-&gt;n;i++) &#123;<br>root-&gt;key[i-1]=root-&gt;key[i];<br>&#125;<br>root-&gt;n-=1;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void right_rotate(Node *root,int pos)&#123;<br><span class="hljs-keyword">for</span>(int i=Rchild(root,pos)-&gt;n+1;i&gt;=0;i--)&#123;<br>Rchild(root,pos)-&gt;key[i+1]=Rchild(root,pos)-&gt;key[i]; <br>Rchild(root,pos)-&gt;next[i+1]=Rchild(root,pos)-&gt;next[i];<br>&#125;<br>Rchild(root,pos)-&gt;key[0]=root-&gt;key[pos];<br>Rchild(root,pos)-&gt;next[0]=Lchild(root,pos)-&gt;next[Lchild(root,pos)-&gt;n];<br>root-&gt;key[pos]=Lchild(root,pos)-&gt;key[Lchild(root,pos)-&gt;n-1];<br>Lchild(root,pos)-&gt;next[Lchild(root,pos)-&gt;n]=NULL;<br>Lchild(root,pos)-&gt;n-=1;<br>Rchild(root,pos)-&gt;n+=1;<br><span class="hljs-built_in">return</span> ; <br>&#125;<br><br>void left_rotate(Node *root,int pos)&#123;<br>Lchild(root,pos)-&gt;key[Lchild(root,pos)-&gt;n]=root-&gt;key[pos];<br>Lchild(root,pos)-&gt;next[Lchild(root,pos)-&gt;n+1]=Rchild(root,pos)-&gt;next[0];<br>Lchild(root,pos)-&gt;n+=1;<br>root-&gt;key[pos]=Rchild(root,pos)-&gt;key[0];<br><span class="hljs-keyword">for</span>(int i=0;i&lt;Rchild(root,pos)-&gt;n;i++)&#123;<br>Rchild(root,pos)-&gt;key[i]=Rchild(root,pos)-&gt;key[i+1];<br>Rchild(root,pos)-&gt;next[i]=Rchild(root,pos)-&gt;next[i+1]; <br>&#125;<br>Rchild(root,pos)-&gt;next[Rchild(root,pos)-&gt;n]=NULL;<br>Rchild(root,pos)-&gt;n-=1;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void merge_node(Node *root,int pos)&#123;<br>Node *node1=getnewnode();<br><span class="hljs-keyword">for</span>(int i=0;i&lt;=Lchild(root,pos)-&gt;n;i++)&#123;<br>node1-&gt;key[i]=Lchild(root,pos)-&gt;key[i];<br>node1-&gt;next[i]=Lchild(root,pos)-&gt;next[i];<br>&#125;<br>node1-&gt;n=Lchild(root,pos)-&gt;n+1;<br>node1-&gt;key[node1-&gt;n-1]=root-&gt;key[pos];<br><span class="hljs-keyword">for</span>(int i=0;i&lt;=Rchild(root,pos)-&gt;n;i++)&#123;<br>node1-&gt;key[i+node1-&gt;n]=Rchild(root,pos)-&gt;key[i];<br>node1-&gt;next[i+node1-&gt;n]=Rchild(root,pos)-&gt;next[i];<br>&#125;<br>node1-&gt;n+=Rchild(root,pos)-&gt;n;<br><span class="hljs-keyword">for</span>(int i=pos+1;i&lt;=root-&gt;n;i++)&#123;<br>root-&gt;key[i-1]=root-&gt;key[i];<br>root-&gt;next[i-1]=root-&gt;next[i];<br>&#125;<br>root-&gt;next[pos]=node1;<br>root-&gt;n-=1;<br><span class="hljs-built_in">return</span> ; <br>&#125;<br><br>Node *erase_maintain(Node *root,int pos)&#123;<br>int lower_bound=(MAX_M+1)/2-1;<br><span class="hljs-keyword">if</span>(root-&gt;next[pos]-&gt;n&gt;=lower_bound) <span class="hljs-built_in">return</span> root;<br><span class="hljs-keyword">if</span>(pos&gt;0&amp;&amp;root-&gt;next[pos-1]-&gt;n&gt;lower_bound)&#123;<br>right_rotate(root,pos-1);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(pos&lt;root-&gt;n&amp;&amp;root-&gt;next[pos+1]-&gt;n&gt;lower_bound)&#123;<br>left_rotate(root,pos);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">if</span>(pos&gt;0) merge_node(root,pos-1);<br><span class="hljs-keyword">else</span> merge_node(root,pos);//merge j,j+1;<br>&#125;<br><span class="hljs-built_in">return</span> root;<br>&#125;<br><br>Node *__erase(Node *root,int key)&#123;<br><span class="hljs-keyword">if</span>(root==NULL) <span class="hljs-built_in">return</span> root;<br>int pos=0; <br><span class="hljs-keyword">while</span>(pos&lt;root-&gt;n&amp;&amp;root-&gt;key[pos]&lt;key) pos+=1;<br><span class="hljs-keyword">if</span>(root-&gt;next[0]==NULL)&#123;<br><span class="hljs-keyword">if</span>(pos&lt;root-&gt;n&amp;&amp;root-&gt;key[pos]==key) erase_key(root,pos);<br><span class="hljs-built_in">return</span> root;<br>&#125;<span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span>(pos&lt;root-&gt;n&amp;&amp;root-&gt;key[pos]==key)&#123;<br>Node *temp=root-&gt;next[pos];<br><span class="hljs-keyword">while</span>(temp-&gt;next[temp-&gt;n]) temp=temp-&gt;next[temp-&gt;n];<br>swap(root-&gt;key[pos],temp-&gt;key[temp-&gt;n-1]);<br>&#125;<br>root-&gt;next[pos]=__erase(root-&gt;next[pos],key);<br>&#125;<br><span class="hljs-built_in">return</span> erase_maintain(root,pos);<br>&#125;<br><br>Node *erase(Node *root,int key)&#123;<br>root=__erase(root,key);<br><span class="hljs-keyword">if</span>(root-&gt;n==0)&#123;<br>Node *temp=root-&gt;next[0];<br>delete root;<br>root=temp;<br>&#125;<br><span class="hljs-built_in">return</span> root;<br>&#125; <br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()&#123;<br>srand(time(0));<br>Node *root = NULL;<br><span class="hljs-comment">#define MAX_OP 12</span><br>    <span class="hljs-keyword">for</span> (int i = 0; i &lt; MAX_OP; i++) &#123;<br>        int val = rand() % 100;<br>        root = insert(root, val);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\ninsert %d to BTree : \n&quot;</span>, val);<br>        output(root);<br>    &#125;<br>    int x;<br>    <span class="hljs-keyword">while</span> (~scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;erase %d from BTree : \n&quot;</span>, x);<br>        root = erase(root, x);<br>        output(root);<br>    &#125;<br><span class="hljs-built_in">return</span> 0; <br>&#125;<br></code></pre></td></tr></table></figure><h1 id="高精度"><a href="#高精度" class="headerlink" title="高精度"></a>高精度</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;iostream&gt;</span><br><span class="hljs-comment">#include&lt;vector&gt;</span><br>using namespace std;<br>class BigInt:public vector&lt;int&gt;&#123;<br>public:<br>BigInt(int x)&#123;<br>this-&gt;push_back(x);<br>process_digit();<br>&#125;<br>void operator+=(int x)&#123;<br>at(0)+=x;<br>process_digit();<br><span class="hljs-built_in">return</span> ; <br>&#125;<br>BigInt operator+(int x)&#123;<br>BigInt ret(*this);<br>ret+=x;<br><span class="hljs-built_in">return</span> ret;<br>&#125;<br>void operator-=(int x)&#123;<br>int y=0;<br><span class="hljs-keyword">for</span>(int i=size()-1;i&gt;=0;i--)&#123;<br><br>&#125;<br>&#125; <br>void operator*=(int x)&#123;<br><span class="hljs-keyword">for</span>(int i=0;i&lt;size();i++) at(i)*=x;<br>process_digit();<br><span class="hljs-built_in">return</span> ;<br>&#125;<br>BigInt operator*(int x)&#123;<br>BigInt ret(*this);<br>ret*=x;<br><span class="hljs-built_in">return</span> ret;<br>&#125;<br>void operator/=(int x)&#123;<br>int y=0;<br><span class="hljs-keyword">for</span>(int i=size()-1;i&gt;=0;i--)&#123;<br>y=y*10+at(i);<br>at(i)=y/x;<br>y%=x;<br>&#125;<br>process_digit();<br><span class="hljs-built_in">return</span> ;<br>&#125;<br>BigInt operator/(int x)&#123;<br>BigInt ret(*this);<br>ret/=x;<br><span class="hljs-built_in">return</span> ret;<br>&#125;<br>void <span class="hljs-function"><span class="hljs-title">process_digit</span></span>()&#123;<br><span class="hljs-keyword">for</span>(int i=0;i&lt;this-&gt;size();i++)&#123;<br><span class="hljs-keyword">if</span>(at(i)&lt;10) <span class="hljs-built_in">continue</span>;<br><span class="hljs-keyword">if</span>(i+1==size()) push_back(0);<br>at(i+1)+=at(i)/10;<br>at(i)%=10;<br>&#125;<br><span class="hljs-keyword">while</span>(size()&gt;1&amp;&amp;at(size()-1)==0) pop_back();<br><span class="hljs-built_in">return</span> ;<br>&#125;<br>&#125;;<br><br>ostream&amp; operator&lt;&lt;(ostream &amp;out,const BigInt &amp;a)&#123;<br><span class="hljs-keyword">for</span>(int i=a.size()-1;i&gt;=0;i--) out&lt;&lt;<span class="hljs-string">a[i];</span><br><span class="hljs-string">return out;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;iostream&gt;</span><br><span class="hljs-comment">#define BASE 26</span><br><span class="hljs-comment">#include&lt;queue&gt;</span><br><span class="hljs-comment">#include&lt;cstring&gt;</span><br>using namespace std;<br>struct node&#123;<br>int flag;<br>node *next[26];<br>node *fail;<br>const char *s;<br>&#125;;<br><br>node *<span class="hljs-function"><span class="hljs-title">getnewnode</span></span>()&#123;<br>node *p=new node;<br>p-&gt;flag=0;<br>p-&gt;fail=NULL;<br>p-&gt;s=NULL;<br><span class="hljs-keyword">for</span>(int i=0;i&lt;BASE;i++) p-&gt;next[i]=NULL;<br><span class="hljs-built_in">return</span> p;<br>&#125;<br><br>void insert(node *root,const char *s)&#123;<br>node *p=root;<br><span class="hljs-keyword">for</span>(int i=0;i&lt;BASE;i++)&#123;<br>int ind=s[i]-<span class="hljs-string">&#x27;a&#x27;</span>;<br><span class="hljs-keyword">if</span>(p-&gt;next[ind]==NULL) p-&gt;next[ind]=getnewnode();<br>p=p-&gt;next[ind]; <br>&#125;<br>p-&gt;s=strdup(s);<br>p-&gt;flag=1;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void build_ac(node *root)&#123;<br>queue&lt;node *&gt; q;<br>q.push(root);<br><span class="hljs-keyword">for</span>(int i=0;i&lt;BASE;i++)&#123;<br><span class="hljs-keyword">if</span>(root-&gt;next[i]==NULL) <span class="hljs-built_in">continue</span>;<br>root-&gt;next[i]-&gt;fail=root;<br>q.push(root-&gt;next[i]);<br>&#125;<br><span class="hljs-keyword">while</span>(!q.empty())&#123;<br>node *cur=q.front(),*p;<br>q.pop();<br><span class="hljs-keyword">for</span>(int i=0;i&lt;BASE;i++)&#123;<br><span class="hljs-keyword">if</span>(cur-&gt;next[i]==NULL) <span class="hljs-built_in">continue</span>;<br>p=cur-&gt;fail;<br><span class="hljs-keyword">while</span>(p&amp;&amp;p-&gt;next[i]==NULL) p=p-&gt;fail;<br><span class="hljs-keyword">if</span>(p==NULL) p=root;<br><span class="hljs-keyword">else</span> p=p-&gt;next[i];<br>cur-&gt;next[i]-&gt;fail=p;<br>q.push(cur-&gt;next[i]);<br>&#125;<br>&#125;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><br>void find(node *root,const char *s)&#123;<br>node *p=root,*q;<br><span class="hljs-keyword">for</span>(int i=0;s[i];i++)&#123;<br>int ind=s[i]-<span class="hljs-string">&#x27;a&#x27;</span>;<br><span class="hljs-keyword">while</span>(p&amp;&amp;p-&gt;next[ind]==NULL) p=p-&gt;fail;<br><span class="hljs-keyword">if</span>(p==NULL) p=root;<br><span class="hljs-keyword">else</span> p=p-&gt;next[ind];<br>q=p;<br><span class="hljs-keyword">while</span>(q)&#123;<br><span class="hljs-keyword">if</span>(q-&gt;flag) cout&lt;&lt;<span class="hljs-string">q-&gt;s;</span><br><span class="hljs-string">q</span>=q-&gt;fail; <br>&#125;<br>&#125;<br>&#125;<br><br>void clear(node *root)&#123;<br><span class="hljs-keyword">if</span>(root==NULL) <span class="hljs-built_in">return</span> ;<br><span class="hljs-keyword">for</span>(int i=0;i&lt;BASE;i++) &#123;<br><span class="hljs-keyword">if</span>(root-&gt;next[i]==NULL) <span class="hljs-built_in">continue</span>;<br>clear(root-&gt;next[i]);<br>&#125;<br>delete root;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()&#123;<br>int n;<br>char s[100];<br>cin&gt;&gt;n;<br>node *root=getnewnode();<br><span class="hljs-keyword">for</span>(int i=0;i&lt;n;i++)&#123;<br>cin&gt;&gt;s;<br>insert(root,s);<br>&#125;<br><br>build_ac(root);<br>char s1[50];<br>cin&gt;&gt;s1;<br>find(root,s);<br><span class="hljs-built_in">return</span> 0;<br>&#125; <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从0到1编写一个文本编辑器</title>
    <link href="/2024/08/27/%E4%BB%8E0%E5%88%B01%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <url>/2024/08/27/%E4%BB%8E0%E5%88%B01%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>本文代码在linux命令行环境下运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include&lt;termios.h&gt;</span><br><span class="hljs-comment">#include&lt;unistd.h&gt;</span><br><span class="hljs-comment">#include&lt;ctype.h&gt;</span><br><span class="hljs-comment">#include&lt;errno.h&gt;</span><br><span class="hljs-comment">#include&lt;time.h&gt;</span><br><span class="hljs-comment">#include&lt;stdarg.h&gt;</span><br><span class="hljs-comment">#include&lt;fcntl.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;sys/types.h&gt;</span><br><span class="hljs-comment">#include&lt;sys/ioctl.h&gt;</span><br><span class="hljs-comment">#define CTRL_KEY(k) ((k) &amp; 0x1f)</span><br><span class="hljs-comment">#define KILO_VERSION &quot;0.0.1&quot;</span><br><span class="hljs-comment">#define KILO_TAB_STOP 8</span><br><span class="hljs-comment">#define KILO_QUIT_TIMES 3</span><br><span class="hljs-comment">#define HL_HIGHLIGHT_NUMBERS (1&lt;&lt;0)</span><br><span class="hljs-comment">#define HL_HIGHLIGHT_STRINGS (1&lt;&lt;1)</span><br><br>struct editorSyntax &#123;<br>  char *filetype;<br>  char **filematch;<br>  char **keywords;<br>  char *singleline_comment_start;<br>  char *multiline_comment_start;<br>  char *multiline_comment_end;<br>  int flags;<br>&#125;;<br><br>enum editorKey &#123;<br>  BACKSPACE = 127,<br>  ARROW_LEFT = 1000,<br>  ARROW_RIGHT,<br>  ARROW_UP,<br>  ARROW_DOWN,<br>  DEL_KEY,<br>  HOME_KEY,<br>  END_KEY,<br>  PAGE_UP,<br>  PAGE_DOWN<br>&#125;;<br><br>enum editorHighlight &#123;<br>  HL_NORMAL = 0,<br>  HL_COMMENT,<br>  HL_MLCOMMENT,<br>  HL_KEYWORD1,<br>  HL_KEYWORD2,<br>  HL_STRING,<br>  HL_NUMBER,<br>  HL_MATCH<br>&#125;;<br><br>typedef struct erow &#123;<br>  int idx;<br>  int size;<br>  int rsize;<br>  char *chars;<br>  char *render;<br>  unsigned char *hl;<br>  int hl_open_comment;<br>&#125; erow;<br><br>struct editorConfig &#123;<br>  int cx, cy;<br>  int rx;<br>  int rowoff;<br>  int coloff;<br>  int screenrows;<br>  int screencols;<br>  int numrows;<br>  erow *row;<br>  int dirty;<br>  char *filename;<br>  char statusmsg[80];<br>  time_t statusmsg_time;<br>  struct editorSyntax *syntax;<br>  struct termios orig_termios;<br>&#125;;<br><br>struct editorConfig E;<br>struct termios orig_termios;<br><br>char *C_HL_extensions[] = &#123; <span class="hljs-string">&quot;.c&quot;</span>, <span class="hljs-string">&quot;.h&quot;</span>, <span class="hljs-string">&quot;.cpp&quot;</span>, NULL &#125;;<br>char *C_HL_keywords[] = &#123;<br>  <span class="hljs-string">&quot;switch&quot;</span>, <span class="hljs-string">&quot;if&quot;</span>, <span class="hljs-string">&quot;while&quot;</span>, <span class="hljs-string">&quot;for&quot;</span>, <span class="hljs-string">&quot;break&quot;</span>, <span class="hljs-string">&quot;continue&quot;</span>, <span class="hljs-string">&quot;return&quot;</span>, <span class="hljs-string">&quot;else&quot;</span>,<br>  <span class="hljs-string">&quot;struct&quot;</span>, <span class="hljs-string">&quot;union&quot;</span>, <span class="hljs-string">&quot;typedef&quot;</span>, <span class="hljs-string">&quot;static&quot;</span>, <span class="hljs-string">&quot;enum&quot;</span>, <span class="hljs-string">&quot;class&quot;</span>, <span class="hljs-string">&quot;case&quot;</span>,<br>  <span class="hljs-string">&quot;int|&quot;</span>, <span class="hljs-string">&quot;long|&quot;</span>, <span class="hljs-string">&quot;double|&quot;</span>, <span class="hljs-string">&quot;float|&quot;</span>, <span class="hljs-string">&quot;char|&quot;</span>, <span class="hljs-string">&quot;unsigned|&quot;</span>, <span class="hljs-string">&quot;signed|&quot;</span>,<br>  <span class="hljs-string">&quot;void|&quot;</span>, NULL<br>&#125;;<br>struct editorSyntax HLDB[] = &#123;<br>  &#123;<br>    <span class="hljs-string">&quot;c&quot;</span>,<br>    C_HL_extensions,<br>    C_HL_keywords,<br>    <span class="hljs-string">&quot;//&quot;</span>, <span class="hljs-string">&quot;/*&quot;</span>, <span class="hljs-string">&quot;*/&quot;</span>,<br>    HL_HIGHLIGHT_NUMBERS | HL_HIGHLIGHT_STRINGS<br>  &#125;,<br>&#125;;<br><span class="hljs-comment">#define HLDB_ENTRIES (sizeof(HLDB) / sizeof(HLDB[0]))</span><br><br>/*** prototypes ***/<br>void editorSetStatusMessage(const char *<span class="hljs-built_in">fmt</span>, ...);<br>void editorRefreshScreen();<br>char *editorPrompt(char *prompt, void (*callback)(char *, int));<br><br>void die(const char *s) &#123;<br>  write(STDOUT_FILENO, <span class="hljs-string">&quot;\x1b[2J&quot;</span>, 4);<br>  write(STDOUT_FILENO, <span class="hljs-string">&quot;\x1b[H&quot;</span>, 3);<br>  perror(s);<br>  <span class="hljs-built_in">exit</span>(1);<br>&#125;<br><br>void <span class="hljs-function"><span class="hljs-title">disableRawMode</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> (tcsetattr(STDIN_FILENO, TCSAFLUSH, &amp;E.orig_termios) == -1)<br>    die(<span class="hljs-string">&quot;tcsetattr&quot;</span>);<br>&#125;<br><br>void <span class="hljs-function"><span class="hljs-title">enableRawMode</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> (tcgetattr(STDIN_FILENO, &amp;E.orig_termios) == -1) die(<span class="hljs-string">&quot;tcgetattr&quot;</span>);<br>  atexit(disableRawMode);<br>  struct termios raw = E.orig_termios;<br><br>  raw.c_iflag &amp;= ~(IXON|ICRNL|BRKINT|INPCK|ISTRIP);<br>  raw.c_oflag &amp;= ~(OPOST);<br>  raw.c_cflag |= (CS8);<br>  raw.c_lflag &amp;= ~(ECHO|ICANON|ISIG|IEXTEN);<br>  raw.c_cc[VMIN] = 0;<br>  raw.c_cc[VTIME] = 1;<br><br>  <span class="hljs-keyword">if</span> (tcsetattr(STDIN_FILENO, TCSAFLUSH, &amp;raw) == -1) die(<span class="hljs-string">&quot;tcsetattr&quot;</span>);<br>&#125;<br><br>int <span class="hljs-function"><span class="hljs-title">editorReadKey</span></span>() &#123;<br>  int nread;<br>  char c;<br>  <span class="hljs-keyword">while</span> ((nread = read(STDIN_FILENO, &amp;c, <span class="hljs-number">1</span>)) != 1) &#123;<br>    <span class="hljs-keyword">if</span> (nread == -1 &amp;&amp; errno != EAGAIN) die(<span class="hljs-string">&quot;read&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (c == <span class="hljs-string">&#x27;\x1b&#x27;</span>) &#123;<br>    char <span class="hljs-built_in">seq</span>[3];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">read</span>(STDIN_FILENO, &amp;<span class="hljs-built_in">seq</span>[0], 1) != 1) <span class="hljs-built_in">return</span> <span class="hljs-string">&#x27;\x1b&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">read</span>(STDIN_FILENO, &amp;<span class="hljs-built_in">seq</span>[1], 1) != 1) <span class="hljs-built_in">return</span> <span class="hljs-string">&#x27;\x1b&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">seq</span>[0] == <span class="hljs-string">&#x27;[&#x27;</span>) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">seq</span>[1] &gt;= <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; <span class="hljs-built_in">seq</span>[1] &lt;= <span class="hljs-string">&#x27;9&#x27;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">read</span>(STDIN_FILENO, &amp;<span class="hljs-built_in">seq</span>[2], 1) != 1) <span class="hljs-built_in">return</span> <span class="hljs-string">&#x27;\x1b&#x27;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">seq</span>[2] == <span class="hljs-string">&#x27;~&#x27;</span>) &#123;<br>          switch (<span class="hljs-built_in">seq</span>[1]) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;1&#x27;</span>: <span class="hljs-built_in">return</span> HOME_KEY;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;3&#x27;</span>: <span class="hljs-built_in">return</span> DEL_KEY;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;4&#x27;</span>: <span class="hljs-built_in">return</span> END_KEY;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;5&#x27;</span>: <span class="hljs-built_in">return</span> PAGE_UP;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;6&#x27;</span>: <span class="hljs-built_in">return</span> PAGE_DOWN;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;7&#x27;</span>: <span class="hljs-built_in">return</span> HOME_KEY;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;8&#x27;</span>: <span class="hljs-built_in">return</span> END_KEY;<br>          &#125;<br>        &#125;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        switch (<span class="hljs-built_in">seq</span>[1]) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;A&#x27;</span>: <span class="hljs-built_in">return</span> ARROW_UP;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;B&#x27;</span>: <span class="hljs-built_in">return</span> ARROW_DOWN;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;C&#x27;</span>: <span class="hljs-built_in">return</span> ARROW_RIGHT;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;D&#x27;</span>: <span class="hljs-built_in">return</span> ARROW_LEFT;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;H&#x27;</span>: <span class="hljs-built_in">return</span> HOME_KEY;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;F&#x27;</span>: <span class="hljs-built_in">return</span> END_KEY;<br>        &#125;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">seq</span>[0] == <span class="hljs-string">&#x27;O&#x27;</span>) &#123;<br>      switch (<span class="hljs-built_in">seq</span>[1]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;H&#x27;</span>: <span class="hljs-built_in">return</span> HOME_KEY;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;F&#x27;</span>: <span class="hljs-built_in">return</span> END_KEY;<br>      &#125;<br>    &#125;<br>    <span class="hljs-built_in">return</span> <span class="hljs-string">&#x27;\x1b&#x27;</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-built_in">return</span> c;<br>  &#125;<br>&#125;<br><br>int getCursorPosition(int *rows, int *cols) &#123;<br>  char buf[32];<br>  unsigned int i = 0;<br>  <span class="hljs-keyword">if</span> (write(STDOUT_FILENO, <span class="hljs-string">&quot;\x1b[6n&quot;</span>, 4) != 4) <span class="hljs-built_in">return</span> -1;<br>  <span class="hljs-keyword">while</span> (i &lt; sizeof(buf) - 1) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">read</span>(STDIN_FILENO, &amp;buf[i], 1) != 1) <span class="hljs-built_in">break</span>;<br>    <span class="hljs-keyword">if</span> (buf[i] == <span class="hljs-string">&#x27;R&#x27;</span>) <span class="hljs-built_in">break</span>;<br>    i++;<br>  &#125;<br>  buf[i] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>  <span class="hljs-keyword">if</span> (buf[0] != <span class="hljs-string">&#x27;\x1b&#x27;</span> || buf[1] != <span class="hljs-string">&#x27;[&#x27;</span>) <span class="hljs-built_in">return</span> -1;<br>  <span class="hljs-keyword">if</span> (sscanf(&amp;buf[2], <span class="hljs-string">&quot;%d;%d&quot;</span>, rows, cols) != 2) <span class="hljs-built_in">return</span> -1;<br>  <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>int getWindowSize(int *rows, int *cols) &#123;<br>  struct winsize ws;<br>  <span class="hljs-keyword">if</span> (ioctl(STDOUT_FILENO, TIOCGWINSZ, &amp;ws) == -1 || ws.ws_col == 0) &#123;<br>    <span class="hljs-keyword">if</span> (write(STDOUT_FILENO, <span class="hljs-string">&quot;\x1b[999C\x1b[999B&quot;</span>, 12) != 12) <span class="hljs-built_in">return</span> -1;<br>    <span class="hljs-built_in">return</span> getCursorPosition(rows, cols);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    *cols = ws.ws_col;<br>    *rows = ws.ws_row;<br>    <span class="hljs-built_in">return</span> 0;<br>  &#125;<br>&#125;<br><br>int is_separator(int c) &#123;<br>  <span class="hljs-built_in">return</span> isspace(c) || c == <span class="hljs-string">&#x27;\0&#x27;</span> || strchr(<span class="hljs-string">&quot;,.()+-/*=~%&lt;&gt;[];&quot;</span>, c) != NULL;<br>&#125;<br><br>void editorUpdateSyntax(erow *row) &#123;<br>  row-&gt;hl = realloc(row-&gt;hl, row-&gt;rsize);<br>  memset(row-&gt;hl, HL_NORMAL, row-&gt;rsize);<br>  <span class="hljs-keyword">if</span> (E.syntax == NULL) <span class="hljs-built_in">return</span>;<br>  char **keywords = E.syntax-&gt;keywords;<br>  char *scs = E.syntax-&gt;singleline_comment_start;<br>  char *mcs = E.syntax-&gt;multiline_comment_start;<br>  char *mce = E.syntax-&gt;multiline_comment_end;<br>  int scs_len = scs ? strlen(scs) : 0;<br>  int mcs_len = mcs ? strlen(mcs) : 0;<br>  int mce_len = mce ? strlen(mce) : 0;<br>  int prev_sep = 1;<br>  int in_string = 0;<br>  int in_comment = (row-&gt;idx &gt; 0 &amp;&amp; E.row[row-&gt;idx - 1].hl_open_comment);<br>  int i = 0;<br>  <span class="hljs-keyword">while</span> (i &lt; row-&gt;rsize) &#123;<br>    char c = row-&gt;render[i];<br>    unsigned char prev_hl = (i &gt; 0) ? row-&gt;hl[i - 1] : HL_NORMAL;<br>    <span class="hljs-keyword">if</span> (scs_len &amp;&amp; !in_string &amp;&amp; !in_comment) &#123;<br>      <span class="hljs-keyword">if</span> (!strncmp(&amp;row-&gt;render[i], scs, scs_len)) &#123;<br>        memset(&amp;row-&gt;hl[i], HL_COMMENT, row-&gt;rsize - i);<br>        <span class="hljs-built_in">break</span>;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (mcs_len &amp;&amp; mce_len &amp;&amp; !in_string) &#123;<br>      <span class="hljs-keyword">if</span> (in_comment) &#123;<br>        row-&gt;hl[i] = HL_MLCOMMENT;<br>        <span class="hljs-keyword">if</span> (!strncmp(&amp;row-&gt;render[i], mce, mce_len)) &#123;<br>          memset(&amp;row-&gt;hl[i], HL_MLCOMMENT, mce_len);<br>          i += mce_len;<br>          in_comment = 0;<br>          prev_sep = 1;<br>          <span class="hljs-built_in">continue</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          i++;<br>          <span class="hljs-built_in">continue</span>;<br>        &#125;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!strncmp(&amp;row-&gt;render[i], mcs, mcs_len)) &#123;<br>        memset(&amp;row-&gt;hl[i], HL_MLCOMMENT, mcs_len);<br>        i += mcs_len;<br>        in_comment = 1;<br>        <span class="hljs-built_in">continue</span>;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (E.syntax-&gt;flags &amp; HL_HIGHLIGHT_STRINGS) &#123;<br>      <span class="hljs-keyword">if</span> (in_string) &#123;<br>        row-&gt;hl[i] = HL_STRING;<br>        <span class="hljs-keyword">if</span> (c == <span class="hljs-string">&#x27;\\&#x27;</span> &amp;&amp; i + 1 &lt; row-&gt;rsize) &#123;<br>          row-&gt;hl[i + 1] = HL_STRING;<br>          i += 2;<br>          <span class="hljs-built_in">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (c == in_string) in_string = 0;<br>        i++;<br>        prev_sep = 1;<br>        <span class="hljs-built_in">continue</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (c == <span class="hljs-string">&#x27;&quot;&#x27;</span> || c == <span class="hljs-string">&#x27;\&#x27;</span><span class="hljs-string">&#x27;) &#123;</span><br><span class="hljs-string">          in_string = c;</span><br><span class="hljs-string">          row-&gt;hl[i] = HL_STRING;</span><br><span class="hljs-string">          i++;</span><br><span class="hljs-string">          continue;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    if (E.syntax-&gt;flags &amp; HL_HIGHLIGHT_NUMBERS) &#123;</span><br><span class="hljs-string">      if ((isdigit(c) &amp;&amp; (prev_sep || prev_hl == HL_NUMBER)) ||</span><br><span class="hljs-string">          (c == &#x27;</span>.<span class="hljs-string">&#x27; &amp;&amp; prev_hl == HL_NUMBER)) &#123;</span><br><span class="hljs-string">        row-&gt;hl[i] = HL_NUMBER;</span><br><span class="hljs-string">        i++;</span><br><span class="hljs-string">        prev_sep = 0;</span><br><span class="hljs-string">        continue;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    if (prev_sep) &#123;</span><br><span class="hljs-string">      int j;</span><br><span class="hljs-string">      for (j = 0; keywords[j]; j++) &#123;</span><br><span class="hljs-string">        int klen = strlen(keywords[j]);</span><br><span class="hljs-string">        int kw2 = keywords[j][klen - 1] == &#x27;</span>|<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">        if (kw2) klen--;</span><br><span class="hljs-string">        if (!strncmp(&amp;row-&gt;render[i], keywords[j], klen) &amp;&amp;</span><br><span class="hljs-string">            is_separator(row-&gt;render[i + klen])) &#123;</span><br><span class="hljs-string">          memset(&amp;row-&gt;hl[i], kw2 ? HL_KEYWORD2 : HL_KEYWORD1, klen);</span><br><span class="hljs-string">          i += klen;</span><br><span class="hljs-string">          break;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      if (keywords[j] != NULL) &#123;</span><br><span class="hljs-string">        prev_sep = 0;</span><br><span class="hljs-string">        continue;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    prev_sep = is_separator(c);</span><br><span class="hljs-string">    i++;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  int changed = (row-&gt;hl_open_comment != in_comment);</span><br><span class="hljs-string">  row-&gt;hl_open_comment = in_comment;</span><br><span class="hljs-string">  if (changed &amp;&amp; row-&gt;idx + 1 &lt; E.numrows)</span><br><span class="hljs-string">    editorUpdateSyntax(&amp;E.row[row-&gt;idx + 1]);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">int editorSyntaxToColor(int hl) &#123;</span><br><span class="hljs-string">  switch (hl) &#123;</span><br><span class="hljs-string">    case HL_COMMENT:</span><br><span class="hljs-string">    case HL_MLCOMMENT: return 36;</span><br><span class="hljs-string">    case HL_KEYWORD1: return 33;</span><br><span class="hljs-string">    case HL_KEYWORD2: return 32;</span><br><span class="hljs-string">    case HL_STRING: return 35;</span><br><span class="hljs-string">    case HL_NUMBER: return 31;</span><br><span class="hljs-string">    case HL_MATCH: return 34;</span><br><span class="hljs-string">    default: return 37;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorSelectSyntaxHighlight() &#123;</span><br><span class="hljs-string">  E.syntax = NULL;</span><br><span class="hljs-string">  if (E.filename == NULL) return;</span><br><span class="hljs-string">  char *ext = strrchr(E.filename, &#x27;</span>.<span class="hljs-string">&#x27;);</span><br><span class="hljs-string">  for (unsigned int j = 0; j &lt; HLDB_ENTRIES; j++) &#123;</span><br><span class="hljs-string">    struct editorSyntax *s = &amp;HLDB[j];</span><br><span class="hljs-string">    unsigned int i = 0;</span><br><span class="hljs-string">    while (s-&gt;filematch[i]) &#123;</span><br><span class="hljs-string">      int is_ext = (s-&gt;filematch[i][0] == &#x27;</span>.<span class="hljs-string">&#x27;);</span><br><span class="hljs-string">      if ((is_ext &amp;&amp; ext &amp;&amp; !strcmp(ext, s-&gt;filematch[i])) ||</span><br><span class="hljs-string">          (!is_ext &amp;&amp; strstr(E.filename, s-&gt;filematch[i]))) &#123;</span><br><span class="hljs-string">        E.syntax = s;</span><br><span class="hljs-string">        int filerow;</span><br><span class="hljs-string">        for (filerow = 0; filerow &lt; E.numrows; filerow++) &#123;</span><br><span class="hljs-string">          editorUpdateSyntax(&amp;E.row[filerow]);</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">        return;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      i++;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">int editorRowCxToRx(erow *row, int cx) &#123;</span><br><span class="hljs-string">  int rx = 0;</span><br><span class="hljs-string">  int j;</span><br><span class="hljs-string">  for (j = 0; j &lt; cx; j++) &#123;</span><br><span class="hljs-string">    if (row-&gt;chars[j] == &#x27;</span>\t<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">      rx += (KILO_TAB_STOP - 1) - (rx % KILO_TAB_STOP);</span><br><span class="hljs-string">    rx++;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  return rx;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">int editorRowRxToCx(erow *row, int rx) &#123;</span><br><span class="hljs-string">  int cur_rx = 0;</span><br><span class="hljs-string">  int cx;</span><br><span class="hljs-string">  for (cx = 0; cx &lt; row-&gt;size; cx++) &#123;</span><br><span class="hljs-string">    if (row-&gt;chars[cx] == &#x27;</span>\t<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">      cur_rx += (KILO_TAB_STOP - 1) - (cur_rx % KILO_TAB_STOP);</span><br><span class="hljs-string">    cur_rx++;</span><br><span class="hljs-string">    if (cur_rx &gt; rx) return cx;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  return cx;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorUpdateRow(erow *row) &#123;</span><br><span class="hljs-string">  int tabs = 0;</span><br><span class="hljs-string">  int j;</span><br><span class="hljs-string">  for (j = 0; j &lt; row-&gt;size; j++)</span><br><span class="hljs-string">    if (row-&gt;chars[j] == &#x27;</span>\t<span class="hljs-string">&#x27;) tabs++;</span><br><span class="hljs-string">  free(row-&gt;render);</span><br><span class="hljs-string">  row-&gt;render = malloc(row-&gt;size + tabs*(KILO_TAB_STOP - 1) + 1);</span><br><span class="hljs-string">  int idx = 0;</span><br><span class="hljs-string">  for (j = 0; j &lt; row-&gt;size; j++) &#123;</span><br><span class="hljs-string">    if (row-&gt;chars[j] == &#x27;</span>\t<span class="hljs-string">&#x27;) &#123;</span><br><span class="hljs-string">      row-&gt;render[idx++] = &#x27;</span> <span class="hljs-string">&#x27;;</span><br><span class="hljs-string">      while (idx % KILO_TAB_STOP != 0) row-&gt;render[idx++] = &#x27;</span> <span class="hljs-string">&#x27;;</span><br><span class="hljs-string">    &#125; else &#123;</span><br><span class="hljs-string">      row-&gt;render[idx++] = row-&gt;chars[j];</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  row-&gt;render[idx] = &#x27;</span>\0<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">  row-&gt;rsize = idx;</span><br><span class="hljs-string">  editorUpdateSyntax(row);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorInsertRow(int at, char *s, size_t len) &#123;</span><br><span class="hljs-string">  if (at &lt; 0 || at &gt; E.numrows) return;</span><br><span class="hljs-string">  E.row = realloc(E.row, sizeof(erow) * (E.numrows + 1));</span><br><span class="hljs-string">  memmove(&amp;E.row[at + 1], &amp;E.row[at], sizeof(erow) * (E.numrows - at));</span><br><span class="hljs-string">  for (int j = at + 1; j &lt;= E.numrows; j++) E.row[j].idx++;</span><br><span class="hljs-string">  E.row[at].idx = at;</span><br><span class="hljs-string">  E.row[at].size = len;</span><br><span class="hljs-string">  E.row[at].chars = malloc(len + 1);</span><br><span class="hljs-string">  memcpy(E.row[at].chars, s, len);</span><br><span class="hljs-string">  E.row[at].chars[len] = &#x27;</span>\0<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">  E.row[at].rsize = 0;</span><br><span class="hljs-string">  E.row[at].render = NULL;</span><br><span class="hljs-string">  E.row[at].hl = NULL;</span><br><span class="hljs-string">  E.row[at].hl_open_comment = 0;</span><br><span class="hljs-string">  editorUpdateRow(&amp;E.row[at]);</span><br><span class="hljs-string">  E.numrows++;</span><br><span class="hljs-string">  E.dirty++;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorFreeRow(erow *row) &#123;</span><br><span class="hljs-string">  free(row-&gt;render);</span><br><span class="hljs-string">  free(row-&gt;chars);</span><br><span class="hljs-string">  free(row-&gt;hl);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorDelRow(int at) &#123;</span><br><span class="hljs-string">  if (at &lt; 0 || at &gt;= E.numrows) return;</span><br><span class="hljs-string">  editorFreeRow(&amp;E.row[at]);</span><br><span class="hljs-string">  memmove(&amp;E.row[at], &amp;E.row[at + 1], sizeof(erow) * (E.numrows - at - 1));</span><br><span class="hljs-string">  for (int j = at; j &lt; E.numrows - 1; j++) E.row[j].idx--;</span><br><span class="hljs-string">  E.numrows--;</span><br><span class="hljs-string">  E.dirty++;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorRowInsertChar(erow *row, int at, int c) &#123;</span><br><span class="hljs-string">  if (at &lt; 0 || at &gt; row-&gt;size) at = row-&gt;size;</span><br><span class="hljs-string">  row-&gt;chars = realloc(row-&gt;chars, row-&gt;size + 2);</span><br><span class="hljs-string">  memmove(&amp;row-&gt;chars[at + 1], &amp;row-&gt;chars[at], row-&gt;size - at + 1);</span><br><span class="hljs-string">  row-&gt;size++;</span><br><span class="hljs-string">  row-&gt;chars[at] = c;</span><br><span class="hljs-string">  editorUpdateRow(row);</span><br><span class="hljs-string">  E.dirty++;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorRowAppendString(erow *row, char *s, size_t len) &#123;</span><br><span class="hljs-string">  row-&gt;chars = realloc(row-&gt;chars, row-&gt;size + len + 1);</span><br><span class="hljs-string">  memcpy(&amp;row-&gt;chars[row-&gt;size], s, len);</span><br><span class="hljs-string">  row-&gt;size += len;</span><br><span class="hljs-string">  row-&gt;chars[row-&gt;size] = &#x27;</span>\0<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">  editorUpdateRow(row);</span><br><span class="hljs-string">  E.dirty++;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorRowDelChar(erow *row, int at) &#123;</span><br><span class="hljs-string">  if (at &lt; 0 || at &gt;= row-&gt;size) return;</span><br><span class="hljs-string">  memmove(&amp;row-&gt;chars[at], &amp;row-&gt;chars[at + 1], row-&gt;size - at);</span><br><span class="hljs-string">  row-&gt;size--;</span><br><span class="hljs-string">  editorUpdateRow(row);</span><br><span class="hljs-string">  E.dirty++;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorInsertChar(int c) &#123;</span><br><span class="hljs-string">  if (E.cy == E.numrows) &#123;</span><br><span class="hljs-string">    editorInsertRow(E.numrows, &quot;&quot;, 0);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  editorRowInsertChar(&amp;E.row[E.cy], E.cx, c);</span><br><span class="hljs-string">  E.cx++;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorInsertNewline() &#123;</span><br><span class="hljs-string">  if (E.cx == 0) &#123;</span><br><span class="hljs-string">    editorInsertRow(E.cy, &quot;&quot;, 0);</span><br><span class="hljs-string">  &#125; else &#123;</span><br><span class="hljs-string">    erow *row = &amp;E.row[E.cy];</span><br><span class="hljs-string">    editorInsertRow(E.cy + 1, &amp;row-&gt;chars[E.cx], row-&gt;size - E.cx);</span><br><span class="hljs-string">    row = &amp;E.row[E.cy];</span><br><span class="hljs-string">    row-&gt;size = E.cx;</span><br><span class="hljs-string">    row-&gt;chars[row-&gt;size] = &#x27;</span>\0<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">    editorUpdateRow(row);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  E.cy++;</span><br><span class="hljs-string">  E.cx = 0;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorDelChar() &#123;</span><br><span class="hljs-string">  if (E.cy == E.numrows) return;</span><br><span class="hljs-string">  if (E.cx == 0 &amp;&amp; E.cy == 0) return;</span><br><span class="hljs-string">  erow *row = &amp;E.row[E.cy];</span><br><span class="hljs-string">  if (E.cx &gt; 0) &#123;</span><br><span class="hljs-string">    editorRowDelChar(row, E.cx - 1);</span><br><span class="hljs-string">    E.cx--;</span><br><span class="hljs-string">  &#125; else &#123;</span><br><span class="hljs-string">    E.cx = E.row[E.cy - 1].size;</span><br><span class="hljs-string">    editorRowAppendString(&amp;E.row[E.cy - 1], row-&gt;chars, row-&gt;size);</span><br><span class="hljs-string">    editorDelRow(E.cy);</span><br><span class="hljs-string">    E.cy--;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">char *editorRowsToString(int *buflen) &#123;</span><br><span class="hljs-string">  int totlen = 0;</span><br><span class="hljs-string">  int j;</span><br><span class="hljs-string">  for (j = 0; j &lt; E.numrows; j++)</span><br><span class="hljs-string">    totlen += E.row[j].size + 1;</span><br><span class="hljs-string">  *buflen = totlen;</span><br><span class="hljs-string">  char *buf = malloc(totlen);</span><br><span class="hljs-string">  char *p = buf;</span><br><span class="hljs-string">  for (j = 0; j &lt; E.numrows; j++) &#123;</span><br><span class="hljs-string">    memcpy(p, E.row[j].chars, E.row[j].size);</span><br><span class="hljs-string">    p += E.row[j].size;</span><br><span class="hljs-string">    *p = &#x27;</span>\n<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">    p++;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  return buf;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorOpen(char *filename) &#123;</span><br><span class="hljs-string">  free(E.filename);</span><br><span class="hljs-string">  E.filename = strdup(filename);</span><br><span class="hljs-string">  editorSelectSyntaxHighlight();</span><br><span class="hljs-string">  FILE *fp = fopen(filename, &quot;r&quot;);</span><br><span class="hljs-string">  if (!fp) die(&quot;fopen&quot;);</span><br><span class="hljs-string">  char *line = NULL;</span><br><span class="hljs-string">  size_t linecap = 0;</span><br><span class="hljs-string">  ssize_t linelen;</span><br><span class="hljs-string">  while ((linelen = getline(&amp;line, &amp;linecap, fp)) != -1) &#123;</span><br><span class="hljs-string">    while (linelen &gt; 0 &amp;&amp; (line[linelen - 1] == &#x27;</span>\n<span class="hljs-string">&#x27; ||</span><br><span class="hljs-string">                           line[linelen - 1] == &#x27;</span>\r<span class="hljs-string">&#x27;))</span><br><span class="hljs-string">      linelen--;</span><br><span class="hljs-string">    editorInsertRow(E.numrows, line, linelen);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  free(line);</span><br><span class="hljs-string">  fclose(fp);</span><br><span class="hljs-string">  E.dirty = 0;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorSave() &#123;</span><br><span class="hljs-string">  if (E.filename == NULL) &#123;</span><br><span class="hljs-string">    E.filename = editorPrompt(&quot;Save as: %s (ESC to cancel)&quot;, NULL);</span><br><span class="hljs-string">    if (E.filename == NULL) &#123;</span><br><span class="hljs-string">      editorSetStatusMessage(&quot;Save aborted&quot;);</span><br><span class="hljs-string">      return;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    editorSelectSyntaxHighlight();</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  int len;</span><br><span class="hljs-string">  char *buf = editorRowsToString(&amp;len);</span><br><span class="hljs-string">  int fd = open(E.filename, O_RDWR | O_CREAT, 0644);</span><br><span class="hljs-string">  if (fd != -1) &#123;</span><br><span class="hljs-string">    if (ftruncate(fd, len) != -1) &#123;</span><br><span class="hljs-string">      if (write(fd, buf, len) == len) &#123;</span><br><span class="hljs-string">        close(fd);</span><br><span class="hljs-string">        free(buf);</span><br><span class="hljs-string">        E.dirty = 0;</span><br><span class="hljs-string">        editorSetStatusMessage(&quot;%d bytes written to disk&quot;, len);</span><br><span class="hljs-string">        return;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    close(fd);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  free(buf);</span><br><span class="hljs-string">  editorSetStatusMessage(&quot;Can&#x27;</span>t save! I/O error: %s<span class="hljs-string">&quot;, strerror(errno));</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorFindCallback(char *query, int key) &#123;</span><br><span class="hljs-string">  static int last_match = -1;</span><br><span class="hljs-string">  static int direction = 1;</span><br><span class="hljs-string">  static int saved_hl_line;</span><br><span class="hljs-string">  static char *saved_hl = NULL;</span><br><span class="hljs-string">  if (saved_hl) &#123;</span><br><span class="hljs-string">    memcpy(E.row[saved_hl_line].hl, saved_hl, E.row[saved_hl_line].rsize);</span><br><span class="hljs-string">    free(saved_hl);</span><br><span class="hljs-string">    saved_hl = NULL;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  if (key == &#x27;\r&#x27; || key == &#x27;\x1b&#x27;) &#123;</span><br><span class="hljs-string">    last_match = -1;</span><br><span class="hljs-string">    direction = 1;</span><br><span class="hljs-string">    return;</span><br><span class="hljs-string">  &#125; else if (key == ARROW_RIGHT || key == ARROW_DOWN) &#123;</span><br><span class="hljs-string">    direction = 1;</span><br><span class="hljs-string">  &#125; else if (key == ARROW_LEFT || key == ARROW_UP) &#123;</span><br><span class="hljs-string">    direction = -1;</span><br><span class="hljs-string">  &#125; else &#123;</span><br><span class="hljs-string">    last_match = -1;</span><br><span class="hljs-string">    direction = 1;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  if (last_match == -1) direction = 1;</span><br><span class="hljs-string">  int current = last_match;</span><br><span class="hljs-string">  int i;</span><br><span class="hljs-string">  for (i = 0; i &lt; E.numrows; i++) &#123;</span><br><span class="hljs-string">    current += direction;</span><br><span class="hljs-string">    if (current == -1) current = E.numrows - 1;</span><br><span class="hljs-string">    else if (current == E.numrows) current = 0;</span><br><span class="hljs-string">    erow *row = &amp;E.row[current];</span><br><span class="hljs-string">    char *match = strstr(row-&gt;render, query);</span><br><span class="hljs-string">    if (match) &#123;</span><br><span class="hljs-string">      last_match = current;</span><br><span class="hljs-string">      E.cy = current;</span><br><span class="hljs-string">      E.cx = editorRowRxToCx(row, match - row-&gt;render);</span><br><span class="hljs-string">      E.rowoff = E.numrows;</span><br><span class="hljs-string">      saved_hl_line = current;</span><br><span class="hljs-string">      saved_hl = malloc(row-&gt;rsize);</span><br><span class="hljs-string">      memcpy(saved_hl, row-&gt;hl, row-&gt;rsize);</span><br><span class="hljs-string">      memset(&amp;row-&gt;hl[match - row-&gt;render], HL_MATCH, strlen(query));</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorFind() &#123;</span><br><span class="hljs-string">  int saved_cx = E.cx;</span><br><span class="hljs-string">  int saved_cy = E.cy;</span><br><span class="hljs-string">  int saved_coloff = E.coloff;</span><br><span class="hljs-string">  int saved_rowoff = E.rowoff;</span><br><span class="hljs-string">  char *query = editorPrompt(&quot;</span>Search: %s (Use ESC/Arrows/Enter)<span class="hljs-string">&quot;,</span><br><span class="hljs-string">                             editorFindCallback);</span><br><span class="hljs-string">  if (query) &#123;</span><br><span class="hljs-string">    free(query);</span><br><span class="hljs-string">  &#125; else &#123;</span><br><span class="hljs-string">    E.cx = saved_cx;</span><br><span class="hljs-string">    E.cy = saved_cy;</span><br><span class="hljs-string">    E.coloff = saved_coloff;</span><br><span class="hljs-string">    E.rowoff = saved_rowoff;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">struct abuf &#123;</span><br><span class="hljs-string">  char *b;</span><br><span class="hljs-string">  int len;</span><br><span class="hljs-string">&#125;;</span><br><span class="hljs-string">#define ABUF_INIT &#123;NULL, 0&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void abAppend(struct abuf *ab, const char *s, int len) &#123;</span><br><span class="hljs-string">  char *new = realloc(ab-&gt;b, ab-&gt;len + len);</span><br><span class="hljs-string">  if (new == NULL) return;</span><br><span class="hljs-string">  memcpy(&amp;new[ab-&gt;len], s, len);</span><br><span class="hljs-string">  ab-&gt;b = new;</span><br><span class="hljs-string">  ab-&gt;len += len;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void abFree(struct abuf *ab) &#123;</span><br><span class="hljs-string">  free(ab-&gt;b);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorScroll() &#123;</span><br><span class="hljs-string">  E.rx = 0;</span><br><span class="hljs-string">  if (E.cy &lt; E.numrows) &#123;</span><br><span class="hljs-string">    E.rx = editorRowCxToRx(&amp;E.row[E.cy], E.cx);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  if (E.cy &lt; E.rowoff) &#123;</span><br><span class="hljs-string">    E.rowoff = E.cy;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  if (E.cy &gt;= E.rowoff + E.screenrows) &#123;</span><br><span class="hljs-string">    E.rowoff = E.cy - E.screenrows + 1;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  if (E.rx &lt; E.coloff) &#123;</span><br><span class="hljs-string">    E.coloff = E.rx;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  if (E.rx &gt;= E.coloff + E.screencols) &#123;</span><br><span class="hljs-string">    E.coloff = E.rx - E.screencols + 1;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorDrawRows(struct abuf *ab) &#123;</span><br><span class="hljs-string">  int y;</span><br><span class="hljs-string">  for (y = 0; y &lt; E.screenrows; y++) &#123;</span><br><span class="hljs-string">    int filerow = y + E.rowoff;</span><br><span class="hljs-string">    if (filerow &gt;= E.numrows) &#123;</span><br><span class="hljs-string">      if (E.numrows == 0 &amp;&amp; y == E.screenrows / 3) &#123;</span><br><span class="hljs-string">        char welcome[80];</span><br><span class="hljs-string">        int welcomelen = snprintf(welcome, sizeof(welcome),</span><br><span class="hljs-string">          &quot;</span>Kilo editor -- version %s<span class="hljs-string">&quot;, KILO_VERSION);</span><br><span class="hljs-string">        if (welcomelen &gt; E.screencols) welcomelen = E.screencols;</span><br><span class="hljs-string">        int padding = (E.screencols - welcomelen) / 2;</span><br><span class="hljs-string">        if (padding) &#123;</span><br><span class="hljs-string">          abAppend(ab, &quot;</span>~<span class="hljs-string">&quot;, 1);</span><br><span class="hljs-string">          padding--;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">        while (padding--) abAppend(ab, &quot;</span> <span class="hljs-string">&quot;, 1);</span><br><span class="hljs-string">        abAppend(ab, welcome, welcomelen);</span><br><span class="hljs-string">      &#125; else &#123;</span><br><span class="hljs-string">        abAppend(ab, &quot;</span>~<span class="hljs-string">&quot;, 1);</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125; else &#123;</span><br><span class="hljs-string">      int len = E.row[filerow].rsize - E.coloff;</span><br><span class="hljs-string">      if (len &lt; 0) len = 0;</span><br><span class="hljs-string">      if (len &gt; E.screencols) len = E.screencols;</span><br><span class="hljs-string">      char *c = &amp;E.row[filerow].render[E.coloff];</span><br><span class="hljs-string">      unsigned char *hl = &amp;E.row[filerow].hl[E.coloff];</span><br><span class="hljs-string">      int current_color = -1;</span><br><span class="hljs-string">      int j;</span><br><span class="hljs-string">      for (j = 0; j &lt; len; j++) &#123;</span><br><span class="hljs-string">        if (iscntrl(c[j])) &#123;</span><br><span class="hljs-string">          char sym = (c[j] &lt;= 26) ? &#x27;@&#x27; + c[j] : &#x27;?&#x27;;</span><br><span class="hljs-string">          abAppend(ab, &quot;</span>\x1b[7m<span class="hljs-string">&quot;, 4);</span><br><span class="hljs-string">          abAppend(ab, &amp;sym, 1);</span><br><span class="hljs-string">          abAppend(ab, &quot;</span>\x1b[m<span class="hljs-string">&quot;, 3);</span><br><span class="hljs-string">          if (current_color != -1) &#123;</span><br><span class="hljs-string">            char buf[16];</span><br><span class="hljs-string">            int clen = snprintf(buf, sizeof(buf), &quot;</span>\x1b[%dm<span class="hljs-string">&quot;, current_color);</span><br><span class="hljs-string">            abAppend(ab, buf, clen);</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125; else if (hl[j] == HL_NORMAL) &#123;</span><br><span class="hljs-string">          if (current_color != -1) &#123;</span><br><span class="hljs-string">            abAppend(ab, &quot;</span>\x1b[39m<span class="hljs-string">&quot;, 5);</span><br><span class="hljs-string">            current_color = -1;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">          abAppend(ab, &amp;c[j], 1);</span><br><span class="hljs-string">        &#125; else &#123;</span><br><span class="hljs-string">          int color = editorSyntaxToColor(hl[j]);</span><br><span class="hljs-string">          if (color != current_color) &#123;</span><br><span class="hljs-string">            current_color = color;</span><br><span class="hljs-string">            char buf[16];</span><br><span class="hljs-string">            int clen = snprintf(buf, sizeof(buf), &quot;</span>\x1b[%dm<span class="hljs-string">&quot;, color);</span><br><span class="hljs-string">            abAppend(ab, buf, clen);</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">          abAppend(ab, &amp;c[j], 1);</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      abAppend(ab, &quot;</span>\x1b[39m<span class="hljs-string">&quot;, 5);</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    abAppend(ab, &quot;</span>\x1b[K<span class="hljs-string">&quot;, 3);</span><br><span class="hljs-string">    abAppend(ab, &quot;</span>\r\n<span class="hljs-string">&quot;, 2);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorDrawStatusBar(struct abuf *ab) &#123;</span><br><span class="hljs-string">  abAppend(ab, &quot;</span>\x1b[7m<span class="hljs-string">&quot;, 4);</span><br><span class="hljs-string">  char status[80], rstatus[80];</span><br><span class="hljs-string">  int len = snprintf(status, sizeof(status), &quot;</span>%.20s - %d lines %s<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    E.filename ? E.filename : &quot;</span>[No Name]<span class="hljs-string">&quot;, E.numrows,</span><br><span class="hljs-string">    E.dirty ? &quot;</span>(modified)<span class="hljs-string">&quot; : &quot;</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string">  int rlen = snprintf(rstatus, sizeof(rstatus), &quot;</span>%s | %d/%d<span class="hljs-string">&quot;,</span><br><span class="hljs-string">    E.syntax ? E.syntax-&gt;filetype : &quot;</span>no ft<span class="hljs-string">&quot;, E.cy + 1, E.numrows);</span><br><span class="hljs-string">  if (len &gt; E.screencols) len = E.screencols;</span><br><span class="hljs-string">  abAppend(ab, status, len);</span><br><span class="hljs-string">  while (len &lt; E.screencols) &#123;</span><br><span class="hljs-string">    if (E.screencols - len == rlen) &#123;</span><br><span class="hljs-string">      abAppend(ab, rstatus, rlen);</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    &#125; else &#123;</span><br><span class="hljs-string">      abAppend(ab, &quot;</span> <span class="hljs-string">&quot;, 1);</span><br><span class="hljs-string">      len++;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  abAppend(ab, &quot;</span>\x1b[m<span class="hljs-string">&quot;, 3);</span><br><span class="hljs-string">  abAppend(ab, &quot;</span>\r\n<span class="hljs-string">&quot;, 2);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorDrawMessageBar(struct abuf *ab) &#123;</span><br><span class="hljs-string">  abAppend(ab, &quot;</span>\x1b[K<span class="hljs-string">&quot;, 3);</span><br><span class="hljs-string">  int msglen = strlen(E.statusmsg);</span><br><span class="hljs-string">  if (msglen &gt; E.screencols) msglen = E.screencols;</span><br><span class="hljs-string">  if (msglen &amp;&amp; time(NULL) - E.statusmsg_time &lt; 5)</span><br><span class="hljs-string">    abAppend(ab, E.statusmsg, msglen);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorRefreshScreen() &#123;</span><br><span class="hljs-string">  editorScroll();</span><br><span class="hljs-string">  struct abuf ab = ABUF_INIT;</span><br><span class="hljs-string">  abAppend(&amp;ab, &quot;</span>\x1b[?25l<span class="hljs-string">&quot;, 6);</span><br><span class="hljs-string">  abAppend(&amp;ab, &quot;</span>\x1b[H<span class="hljs-string">&quot;, 3);</span><br><span class="hljs-string">  editorDrawRows(&amp;ab);</span><br><span class="hljs-string">  editorDrawStatusBar(&amp;ab);</span><br><span class="hljs-string">  editorDrawMessageBar(&amp;ab);</span><br><span class="hljs-string">  char buf[32];</span><br><span class="hljs-string">  snprintf(buf, sizeof(buf), &quot;</span>\x1b[%d;%dH<span class="hljs-string">&quot;, (E.cy - E.rowoff) + 1,</span><br><span class="hljs-string">                                            (E.rx - E.coloff) + 1);</span><br><span class="hljs-string">  abAppend(&amp;ab, buf, strlen(buf));</span><br><span class="hljs-string">  abAppend(&amp;ab, &quot;</span>\x1b[?25h<span class="hljs-string">&quot;, 6);</span><br><span class="hljs-string">  write(STDOUT_FILENO, ab.b, ab.len);</span><br><span class="hljs-string">  abFree(&amp;ab);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorSetStatusMessage(const char *fmt, ...) &#123;</span><br><span class="hljs-string">  va_list ap;</span><br><span class="hljs-string">  va_start(ap, fmt);</span><br><span class="hljs-string">  vsnprintf(E.statusmsg, sizeof(E.statusmsg), fmt, ap);</span><br><span class="hljs-string">  va_end(ap);</span><br><span class="hljs-string">  E.statusmsg_time = time(NULL);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">char *editorPrompt(char *prompt, void (*callback)(char *, int)) &#123;</span><br><span class="hljs-string">  size_t bufsize = 128;</span><br><span class="hljs-string">  char *buf = malloc(bufsize);</span><br><span class="hljs-string">  size_t buflen = 0;</span><br><span class="hljs-string">  buf[0] = &#x27;\0&#x27;;</span><br><span class="hljs-string">  while (1) &#123;</span><br><span class="hljs-string">    editorSetStatusMessage(prompt, buf);</span><br><span class="hljs-string">    editorRefreshScreen();</span><br><span class="hljs-string">    int c = editorReadKey();</span><br><span class="hljs-string">    if (c == DEL_KEY || c == CTRL_KEY(&#x27;h&#x27;) || c == BACKSPACE) &#123;</span><br><span class="hljs-string">      if (buflen != 0) buf[--buflen] = &#x27;\0&#x27;;</span><br><span class="hljs-string">    &#125; else if (c == &#x27;\x1b&#x27;) &#123;</span><br><span class="hljs-string">      editorSetStatusMessage(&quot;</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string">      if (callback) callback(buf, c);</span><br><span class="hljs-string">      free(buf);</span><br><span class="hljs-string">      return NULL;</span><br><span class="hljs-string">    &#125; else if (c == &#x27;\r&#x27;) &#123;</span><br><span class="hljs-string">      if (buflen != 0) &#123;</span><br><span class="hljs-string">        editorSetStatusMessage(&quot;</span><span class="hljs-string">&quot;);</span><br><span class="hljs-string">        if (callback) callback(buf, c);</span><br><span class="hljs-string">        return buf;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125; else if (!iscntrl(c) &amp;&amp; c &lt; 128) &#123;</span><br><span class="hljs-string">      if (buflen == bufsize - 1) &#123;</span><br><span class="hljs-string">        bufsize *= 2;</span><br><span class="hljs-string">        buf = realloc(buf, bufsize);</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      buf[buflen++] = c;</span><br><span class="hljs-string">      buf[buflen] = &#x27;\0&#x27;;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    if (callback) callback(buf, c);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorMoveCursor(int key) &#123;</span><br><span class="hljs-string">  erow *row = (E.cy &gt;= E.numrows) ? NULL : &amp;E.row[E.cy];</span><br><span class="hljs-string">  switch (key) &#123;</span><br><span class="hljs-string">    case ARROW_LEFT:</span><br><span class="hljs-string">      if (E.cx != 0) &#123;</span><br><span class="hljs-string">        E.cx--;</span><br><span class="hljs-string">      &#125; else if (E.cy &gt; 0) &#123;</span><br><span class="hljs-string">        E.cy--;</span><br><span class="hljs-string">        E.cx = E.row[E.cy].size;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case ARROW_RIGHT:</span><br><span class="hljs-string">      if (row &amp;&amp; E.cx &lt; row-&gt;size) &#123;</span><br><span class="hljs-string">        E.cx++;</span><br><span class="hljs-string">      &#125; else if (row &amp;&amp; E.cx == row-&gt;size) &#123;</span><br><span class="hljs-string">        E.cy++;</span><br><span class="hljs-string">        E.cx = 0;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case ARROW_UP:</span><br><span class="hljs-string">      if (E.cy != 0) &#123;</span><br><span class="hljs-string">        E.cy--;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case ARROW_DOWN:</span><br><span class="hljs-string">      if (E.cy &lt; E.numrows) &#123;</span><br><span class="hljs-string">        E.cy++;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  row = (E.cy &gt;= E.numrows) ? NULL : &amp;E.row[E.cy];</span><br><span class="hljs-string">  int rowlen = row ? row-&gt;size : 0;</span><br><span class="hljs-string">  if (E.cx &gt; rowlen) &#123;</span><br><span class="hljs-string">    E.cx = rowlen;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void editorProcessKeypress() &#123;</span><br><span class="hljs-string">  static int quit_times = KILO_QUIT_TIMES;</span><br><span class="hljs-string">  int c = editorReadKey();</span><br><span class="hljs-string">  switch (c) &#123;</span><br><span class="hljs-string">    case &#x27;\r&#x27;:</span><br><span class="hljs-string">      editorInsertNewline();</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case CTRL_KEY(&#x27;q&#x27;):</span><br><span class="hljs-string">      if (E.dirty &amp;&amp; quit_times &gt; 0) &#123;</span><br><span class="hljs-string">        editorSetStatusMessage(&quot;</span>WARNING!!! File has unsaved changes. <span class="hljs-string">&quot;</span><br><span class="hljs-string">          &quot;</span>Press Ctrl-Q %d more <span class="hljs-built_in">times</span> to quit.<span class="hljs-string">&quot;, quit_times);</span><br><span class="hljs-string">        quit_times--;</span><br><span class="hljs-string">        return;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      write(STDOUT_FILENO, &quot;</span>\x1b[2J<span class="hljs-string">&quot;, 4);</span><br><span class="hljs-string">      write(STDOUT_FILENO, &quot;</span>\x1b[H<span class="hljs-string">&quot;, 3);</span><br><span class="hljs-string">      exit(0);</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case CTRL_KEY(&#x27;s&#x27;):</span><br><span class="hljs-string">      editorSave();</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case HOME_KEY:</span><br><span class="hljs-string">      E.cx = 0;</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case END_KEY:</span><br><span class="hljs-string">      if (E.cy &lt; E.numrows)</span><br><span class="hljs-string">        E.cx = E.row[E.cy].size;</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case CTRL_KEY(&#x27;f&#x27;):</span><br><span class="hljs-string">      editorFind();</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case BACKSPACE:</span><br><span class="hljs-string">    case CTRL_KEY(&#x27;h&#x27;):</span><br><span class="hljs-string">    case DEL_KEY:</span><br><span class="hljs-string">      if (c == DEL_KEY) editorMoveCursor(ARROW_RIGHT);</span><br><span class="hljs-string">      editorDelChar();</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case PAGE_UP:</span><br><span class="hljs-string">    case PAGE_DOWN:</span><br><span class="hljs-string">      &#123;</span><br><span class="hljs-string">        if (c == PAGE_UP) &#123;</span><br><span class="hljs-string">          E.cy = E.rowoff;</span><br><span class="hljs-string">        &#125; else if (c == PAGE_DOWN) &#123;</span><br><span class="hljs-string">          E.cy = E.rowoff + E.screenrows - 1;</span><br><span class="hljs-string">          if (E.cy &gt; E.numrows) E.cy = E.numrows;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">        int times = E.screenrows;</span><br><span class="hljs-string">        while (times--)</span><br><span class="hljs-string">          editorMoveCursor(c == PAGE_UP ? ARROW_UP : ARROW_DOWN);</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case ARROW_UP:</span><br><span class="hljs-string">    case ARROW_DOWN:</span><br><span class="hljs-string">    case ARROW_LEFT:</span><br><span class="hljs-string">    case ARROW_RIGHT:</span><br><span class="hljs-string">      editorMoveCursor(c);</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    case CTRL_KEY(&#x27;l&#x27;):</span><br><span class="hljs-string">    case &#x27;\x1b&#x27;:</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">    default:</span><br><span class="hljs-string">      editorInsertChar(c);</span><br><span class="hljs-string">      break;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  quit_times = KILO_QUIT_TIMES;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">void initEditor() &#123;</span><br><span class="hljs-string">  E.cx = 0;</span><br><span class="hljs-string">  E.cy = 0;</span><br><span class="hljs-string">  E.rx = 0;</span><br><span class="hljs-string">  E.rowoff = 0;</span><br><span class="hljs-string">  E.coloff = 0;</span><br><span class="hljs-string">  E.numrows = 0;</span><br><span class="hljs-string">  E.row = NULL;</span><br><span class="hljs-string">  E.dirty = 0;</span><br><span class="hljs-string">  E.filename = NULL;</span><br><span class="hljs-string">  E.statusmsg[0] = &#x27;\0&#x27;;</span><br><span class="hljs-string">  E.statusmsg_time = 0;</span><br><span class="hljs-string">  E.syntax = NULL;</span><br><span class="hljs-string">  if (getWindowSize(&amp;E.screenrows, &amp;E.screencols) == -1) die(&quot;</span>getWindowSize<span class="hljs-string">&quot;);</span><br><span class="hljs-string">  E.screenrows -= 2;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">int main(int argc, char *argv[]) &#123;</span><br><span class="hljs-string">  enableRawMode();</span><br><span class="hljs-string">  initEditor();</span><br><span class="hljs-string">  if (argc &gt;= 2) &#123;</span><br><span class="hljs-string">    editorOpen(argv[1]);</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  editorSetStatusMessage(</span><br><span class="hljs-string">    &quot;</span>HELP: Ctrl-S = save | Ctrl-Q = quit | Ctrl-F = find<span class="hljs-string">&quot;);</span><br><span class="hljs-string">  while (1) &#123;</span><br><span class="hljs-string">    editorRefreshScreen();</span><br><span class="hljs-string">    editorProcessKeypress();</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  return 0;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo和github搭建自己的博客</title>
    <link href="/2024/08/27/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/08/27/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>然后，简单介绍一下利用 GitHub + Hexo 搭建的原理。</p><p>GitHub 是有名的代码托管网站，而它提供了一项服务 GitHub Pages，这个 GitHub Pages 可以将我们托管在 GitHub 上的一个仓库中的 html、css 和 js 代码渲染成静态页面。当然，这个仓库是特殊的，所以每一个 GitHub 账户只能够育一个这样的仓库。将相应的博客内容上传到 GitHub 上之后，我们就可以通过 <code>https://www.username.github.io</code> 来访问自己的博客，这里的 <code>username</code> 要换成自己的用户名。比如，我的用户名是 <code>lhhi</code>，那么就可以通过 <code>https://www.lhhi.github.io</code> 来访问我的博客。</p><p>Hexo 是使用 nodejs 开发的一个快速、简洁、高效的静态博客生成器。Hexo 使用 Markdown 语法解析文章，然后渲染成相应的网页，然后我们将渲染好的网页代码上传到 GitHub 上就可以了。简单来讲，利用 Hexo，我们只需要使用 Markdown 语法写文章，剩下的事情全部交给 Hexo 去做，我们就可以看到想要的博客效果了。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>注意, 下面的所有操作最好在科学上网的环境下完成。</p><h2 id="注册一个github账号"><a href="#注册一个github账号" class="headerlink" title="注册一个github账号"></a>注册一个github账号</h2><p>前往<a href="https://github.com/">github</a>官网，注册一个账号  </p><h2 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h2><p>进入 <a href="https://node.js.org/">node</a> 官网下载</p><p><img src="https://cdn.jsdelivr.net/gh/fanlumaster/BlogMaps@master/blogs/pictures/20211016163651.png"></p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>进入<a href="https://git-scm.com/">git官网</a>下载</p><h1 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h1><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>进入github,创建一个名字为<code>username.github.com</code>存储库(username为你的用户名)</p><h2 id="配置ssh-key"><a href="#配置ssh-key" class="headerlink" title="配置ssh key"></a>配置ssh key</h2><p>打开 Git Bash，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;user.email&quot;</span> <span class="hljs-comment"># user.email 为GitHub 上注册的邮箱</span><br></code></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码。查看是否已经有 ssh 密钥。打开用户主目录 <code>C:\Users\username\.ssh</code>。然后找到生成的 <code>.ssh</code> 的文件夹中的 <code>id_rsa.pub</code> 密钥，将内容全部复制。其中 <code>id_rsa</code> 是私钥不能泄露，<code>id_rsa.pub</code> 是公钥可以放心告诉他人。</p><p><img src="https://cdn.jsdelivr.net/gh/fanlumaster/BlogMaps@master/blogs/pictures/20211016172518.png"></p><p><code>Title</code> 为标题，任意填即可，将刚刚复制的 <code>id_rsa.pub</code> 内容粘贴进去，最后点击 <code>Add SSH key</code>。在 <code>Git Bash</code> 中检测 <code>GitHub</code> 公钥设置是否成功，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>验证是否连接成功，若成功，结果如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/fanlumaster/BlogMaps@master/blogs/pictures/20211016172942.png"></p><h1 id="使用Hexo-博客框架"><a href="#使用Hexo-博客框架" class="headerlink" title="使用Hexo 博客框架"></a>使用Hexo 博客框架</h1><p>Hexo 官方文档：<a href="https://hexo.io/docs/">https://hexo.io/docs/</a></p><h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><h3 id="Hexo-是什么"><a href="#Hexo-是什么" class="headerlink" title="Hexo 是什么"></a>Hexo 是什么</h3><p><code>Hexo</code> 是一个简单、快速、强大的基于 <code>Github Pages</code> 的博客框架，支持 <code>Markdown</code> 格式，有众多优秀插件和主题。</p><h3 id="Hexo-原理"><a href="#Hexo-原理" class="headerlink" title="Hexo 原理"></a>Hexo 原理</h3><p>由于 <code>Github Pages</code> 存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以 <code>Hexo</code> 所做的就是将这些 <code>md</code> 文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到 <code>GitHub</code>。</p><h2 id="安装和初始化"><a href="#安装和初始化" class="headerlink" title="安装和初始化"></a>安装和初始化</h2><h3 id="安装与初始化"><a href="#安装与初始化" class="headerlink" title="安装与初始化"></a>安装与初始化</h3><p>在 <code>Git Bash</code> 中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli <span class="hljs-comment"># 此命令完成对 hexo 的安装</span><br>BASH<br></code></pre></td></tr></table></figure><p>安装完成后，在电脑的某个地方新建一个文件夹（名字可以随便取）专门用于存放博客代码，比如我的是 <code>D:\Blogs</code>，由于这个文件夹将来存放博客的所有内容和素材，以及所有的博客操作都会在其中完成，所以最好不要随便放。</p><p>在新建的博客目录下打开git bash，输入如下命令  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init<br></code></pre></td></tr></table></figure><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><p>继续在git bash输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br></code></pre></td></tr></table></figure><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>在 <code>Git Bash</code> 输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s <span class="hljs-comment"># 开启本地预览</span><br>BASH<br></code></pre></td></tr></table></figure><p><code>hexo s</code> 是开启本地预览服务，打开浏览器访问 <code>http://localhost:4000</code> 即可看到内容，<code>Ctrl+C</code> 停止本地预览。本地预览可以实时查看博客的编辑情况，待博客写完后一起部署到 <code>GitHub</code> 上。</p><p>第一次初始化的时候 <code>hexo</code> 已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑。</p><h3 id="上传到-GitHub"><a href="#上传到-GitHub" class="headerlink" title="上传到 GitHub"></a>上传到 GitHub</h3><h4 id="配置站点配置文件"><a href="#配置站点配置文件" class="headerlink" title="配置站点配置文件"></a>配置站点配置文件</h4><p><code>hexo</code> 有 2 种 <code>_config.yml</code> 文件，一个是根目录下的全局的 <code>_config.yml</code>，一个是各个主体 <code>theme</code> 下的 <code>_config.yml</code>。将前者称为站点配置文件， 后者称为主题配置文件。</p><p>打开根目录下站点配置文件 <code>_config.yml</code>，配置有关 <code>deploy</code> 的部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:username/username.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">masterYAML</span><br></code></pre></td></tr></table></figure><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>在 <code>Git Bash</code> 中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-deployer-git --save <span class="hljs-comment"># 安装部署插件</span><br>BASH<br></code></pre></td></tr></table></figure><p>如果不进行上述操作，直接使用 <code>hexo d</code> 部署到 <code>GitHub</code>，将会报错。</p><h4 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h4><p>在 <code>Git Bash</code> 中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d<br>BASH<br></code></pre></td></tr></table></figure><p>部署成功后，打开对应的网址 <code>https://www.username.github.io</code>，如果出现了和本地预览一样的效果，那么，表明部署成功。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/08/26/hello-world/"/>
    <url>/2024/08/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
